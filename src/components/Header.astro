---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
import data from "../data/navigation.json";

const { imagePath, menuPath, altText } = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/*.{jpeg,jpg,png,gif}"
);
if (!images[imagePath])
  throw new Error(
    `"${imagePath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`
  );
if (!images[menuPath])
  throw new Error(
    `"${menuPath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`
  );
---

<header class="bg-gray-900 text-white shadow-lg dark:bg-gray-800">
  <nav class="container mx-auto p-4 flex items-center justify-between">
    <div class="flex items-center">
      <div class="text-xl font-bold">CoWorking</div>
    </div>

    <button id="mobile-menu-button" class="sm:hidden hover:text-yellow-500 p-2">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M4 6h16M4 12h16M4 18h16"></path>
      </svg>
    </button>

    <ul
      id="nav-links"
      class="hidden sm:flex sm:gap-6 flex-col sm:flex-row absolute sm:static left-0 top-full w-full sm:w-auto sm:bg-transparent bg-gray-900 sm:p-0 p-4"
    >
      {
        data.map((item) => (
          <li class="py-2 sm:py-0">
            <a
              href={item.url}
              class="block hover:text-yellow-500 transition-colors"
            >
              {item.name}
            </a>
          </li>
        ))
      }
    </ul>

    <div class="ml-auto flex items-center gap-4">
      <button id="theme-toggle" class="hover:text-yellow-500 p-2">
        <svg
          id="theme-icon"
          xmlns="http://www.w3.org/2000/svg"
          class="h-6 w-6"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
        </svg>
      </button>
      <Image
        src={images[menuPath]()}
        alt="menu"
        class="hidden sm:block w-6 cursor-pointer"
      />
    </div>
  </nav>
</header>

<script>
  function setTheme(theme: string) {
    document.documentElement.classList.remove("light", "dark");
    if (theme === "auto") {
      localStorage.setItem("theme", theme);
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        document.documentElement.classList.add("dark");
      }
    } else {
      document.documentElement.classList.add(theme);
      localStorage.setItem("theme", theme);
    }
    updateIcon(theme);
  }

  function getStoredTheme() {
    return localStorage.getItem("theme") || "auto";
  }

  function setInitialTheme() {
    const theme = getStoredTheme();
    setTheme(theme);
  }

  function updateIcon(theme: string) {
    const themeIcon = document.getElementById("theme-icon");
    if (themeIcon) {
      if (theme === "light") {
        themeIcon.innerHTML = `
          <path stroke-linecap="round" stroke-linejoin="round" d="M12 3v1m0 16v1m8-8h1m-16 0H3m14.071 7.071l.707.707M6.343 6.343l.707.707m10.607 10.607l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"/>
        `;
      } else if (theme === "dark") {
        themeIcon.innerHTML = `
          <path stroke-linecap="round" stroke-linejoin="round" d="M20.354 15.354A9 9 0 118.646 3.646 7.5 7.5 0 1020.354 15.354z"/>
        `;
      } else {
        themeIcon.innerHTML = `
        <path stroke-linecap="round" stroke-linejoin="round" d="M20.354 15.354A9 9 0 118.646 3.646 7.5 7.5 0 1020.354 15.354z"/>
      `;
      }
    }
  }

  document.addEventListener("DOMContentLoaded", () => {
    setInitialTheme();

    const themeToggleButton = document.getElementById("theme-toggle");

    if (themeToggleButton) {
      themeToggleButton.addEventListener("click", () => {
        const currentTheme = getStoredTheme();
        const newTheme =
          currentTheme === "auto"
            ? "light"
            : currentTheme === "light"
              ? "dark"
              : "auto";
        setTheme(newTheme);
      });
    } else {
      console.error("Theme toggle button not found");
    }
  });
</script>
